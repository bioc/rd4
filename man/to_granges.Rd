% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/d4source.R
\name{to_granges}
\alias{to_granges}
\title{Returns a \code{GRanges} object representing the data in a D4 track.}
\usage{
to_granges(
  d4source,
  ...,
  chr = NA,
  start = NA,
  end = NA,
  track = NA,
  colname = "score"
)
}
\arguments{
\item{d4source}{\code{D4Source} object}

\item{...}{Not used for values, forces later arguments to bind by name}

\item{chr}{Chromosome/contig name. If omitted, queries the entire genome.}

\item{start}{1-based start position. If omitted, queries the entire
chromosome.}

\item{end}{1-based inclusive end position. If omitted, queries the entire
chromosome.}

\item{track}{Track name. If omitted or NA, queries the first track.}

\item{colname}{Name of metadata column in which to store}
}
\value{
\code{GRanges} object with metadata column storing data values
}
\description{
The returned \code{GRanges} contains ranges covering the entire requested region.
Runs of equal data values are collapsed to single ranges. Data values
are stored in a metadata column.
}
\details{
Note: if data values are continuous or vary a lot, for large regions this
function may be slow and may return a very large \code{GRanges} object. In that
case, consider working with smaller regions. Use this function when a
\code{GRanges} object is required for other Bioconductor workflows.
}
\examples{
d4source <- D4Source(system.file('extdata', 'example.d4', package = 'rd4'))

# Specific region
to_granges(d4source, chr = "chr1", start = 1000000, end = 1000000)

# Entire chromosome
to_granges(d4source, chr = "chr3")

# Entire genome
to_granges(d4source)
}
