% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/d4source.R
\name{import}
\alias{import}
\title{Get a \code{GRanges} object representing the data in a D4 track}
\usage{
import(d4source, ..., which = NULL, track = NA, colname = "score")
}
\arguments{
\item{d4source}{\code{D4Source} object}

\item{...}{Not used for values, forces later arguments to bind by name}

\item{which}{\code{GRanges} or \code{GRangesList} object defining the intervals to
query. Used only for chromosome, start and end coordinates. Strand and other
metadata are ignored. Returned object is of type \code{GRanges} but likely will
not contain the same intervals as \code{which} as it is defined in terms of runs
of data values (see \code{Details}).. If omitted or NULL, queries the
entire genome.}

\item{track}{Track name. If omitted or NA, queries the first track.}

\item{colname}{Name of metadata column in which to store data values}
}
\value{
\code{GRanges} object with metadata column storing data values
}
\description{
Analogous to the \verb{import.*()} methods provided in
\href{https://www.bioconductor.org/packages/release/bioc/html/rtracklayer.html}{rtracklayer}.
}
\details{
The returned \code{GRanges} contains ranges covering the entire requested
region(s). Runs of equal data values are collapsed to single ranges. Data
values are stored in a metadata column.

Note: if data values are continuous or vary a lot, for large regions this
function may be slow and may return a very large \code{GRanges} object. In that
case, consider working with smaller regions. Use this function when a
\code{GRanges} object is required for other Bioconductor workflows.
}
\examples{
d4source <- D4Source(system.file('extdata', 'example.d4', package = 'rd4'))

# Specific region
import(
  d4source, 
  which = GenomicRanges::GRanges(
    seqnames = "chr1", 
    IRanges::IRanges(start = c(17027501, 17027701), end = c(17027600, 17027800))
  )
)

# Entire genome
import(d4source)
}
